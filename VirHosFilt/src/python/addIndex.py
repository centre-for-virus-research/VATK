#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Jan 18, 2019 03:23:00 PM GMT  platform: Darwin

import sys

from sys import platform as sys_pf
if sys_pf == 'darwin':
    import matplotlib
    matplotlib.use("TkAgg")
import sys
import time
import os
from os import listdir
from os.path import isfile, join
import matplotlib.pyplot as plt
from Tkinter import *
import Tkinter, Tkconstants, tkFileDialog



try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import addIndex_support

destinationFolder = sys.argv[1]

def exitProgram(event):
    exit()

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root

    def openInputFile(event):
        inputFile = tkFileDialog.askopenfilename(initialdir = "/",title = "Select a fasta file")
        #print inputFile
        top.fastaEntry.delete(0,END)
        top.fastaEntry.insert(0,inputFile)

    def runProgram(event):
        textToWrite = top.Text1.get(1.0,END)
        top.Text1.insert(END,"\n\n\nIndexing started!\nPlease be aware that for genome size in the order >100Mb the process may take several minutes...")
        top.Text1.update()
        os.system("bowtie2-build "+top.fastaEntry.get()+" "+top.suffixEntry.get())
        top.Text1.insert(END,"\nIndex created!\n\nSelect another genome of press Cancel to close this window....")
        outfile = open(top.suffixEntry.get()+"_virhosfilt","w")
        a = 0
        for c in range(len(textToWrite)):
            a += 1
            outfile.write(textToWrite[c])
            #print textToWrite[c]
            if textToWrite[c] == " ":
                if a>50:
                    outfile.write("\n")
                    a = 0
            if textToWrite[c]== "\n":
                a=0
        outfile.write("\n\nURL:\n"+top.Entry2.get())
        outfile.close()
        os.system("mv "+top.suffixEntry.get()+"* ./"+destinationFolder)




    root = tk.Tk()
    top = addIndex (root)
    addIndex_support.init(root, top)

    top.Button1.bind('<Button-1>' ,openInputFile)
    top.Button3.bind('<Button-1>' ,exitProgram)
    top.Button2.bind('<Button-1>' ,runProgram)

    root.mainloop()

w = None
def create_addIndex(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = addIndex (w)
    addIndex_support.init(w, top, *args, **kwargs)

    



    return (w, top)

def destroy_addIndex():
    global w
    w.destroy()
    w = None

class addIndex:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 

        top.geometry("560x460+351+401")
        top.title("Add new genome")

        self.fastaEntry = tk.Entry(top)
        self.fastaEntry.place(x=20, y=40,height=30, width=400)
        self.fastaEntry.configure(background="white")
        self.fastaEntry.configure(font="TkFixedFont")
        self.fastaEntry.configure(width=226)

        self.Button1 = tk.Button(top)
        self.Button1.place(x=440, y=40, height=30, width=100)
        self.Button1.configure(text='''Open file''')


        self.Frame1 = tk.Frame(top)
        self.Frame1.place(x=20, y=160, height=220, width=520)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(width=125)

        self.Text1 = tk.Text(top)
        self.Text1.place(x=25, y=165, height=210, width=510)

        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(undo="1")
        self.Text1.configure(width=526)
        self.Text1.configure(wrap='word')

        self.Label1 = tk.Label(top)
        self.Label1.place(x=20, y=20, height=18, width=58)
        self.Label1.configure(text='''Input file''')

        self.Label2 = tk.Label(top)
        self.Label2.place(x=20, y=140, height=20, width=130)
        self.Label2.configure(text='''Genome description''')
        self.Label2.configure(width=136)

        self.Label4 = tk.Label(top)
        self.Label4.place(x=20, y=80, height=18, width=80)
        self.Label4.configure(text='''Index suffix''')
        self.Label4.configure(width=136)

        self.suffixEntry = tk.Entry(top)
        self.suffixEntry.place(x=20, y=100,height=30, width=400)
        self.suffixEntry.configure(background="white")
        self.suffixEntry.configure(font="TkFixedFont")
        self.suffixEntry.configure(width=516)

        self.Label3 = tk.Label(top)
        self.Label3.place(x=20, y=390, height=20, width=30)
        self.Label3.configure(text='''URL''')
        self.Label3.configure(width=46)

        self.Entry2 = tk.Entry(top)
        self.Entry2.place(x=20, y=410,height=30, width=350)
        self.Entry2.configure(background="white")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(width=516)

        self.Button2 = tk.Button(top)
        self.Button2.place(x=470, y=410, height=30, width=70)
        self.Button2.configure(text='''Run''')

        self.Button3 = tk.Button(top)
        self.Button3.place(x=390, y=410, height=30, width=70)
        self.Button3.configure(text='''Cancel''')

if __name__ == '__main__':
    vp_start_gui()





